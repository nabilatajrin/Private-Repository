XML:

<ImageView
	android:id="@+id/profile_edit_picture"
	android:layout_width="100dp"
	android:layout_height="100dp"
	android:layout_gravity="center"
	app:srcCompat="@drawable/profile_pic" />

Java:

import android.app.DatePickerDialog;
import android.content.ContentValues;
import android.content.Intent;
import android.content.SharedPreferences;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.os.ParcelFileDescriptor;
import android.provider.MediaStore;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import android.widget.Toast;

import com.exapmple.android.aponjonregistration.R;
import com.exapmple.android.aponjonregistration.data.AponjonRegistrationContract;
import com.exapmple.android.aponjonregistration.data.AponjonRegistrationDbHelper;

import java.io.FileDescriptor;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import static com.exapmple.android.aponjonregistration.R.id.profile_edit_picture;


Selecting image form phone gallery

Step 1: decrearing variables 

private ImageView imageView;
private static int RESULT_LOAD_IMAGE = 1;

Step 2: create ImageView object in onCreate method

imageView = (ImageView) findViewById(R.id.imgView);


Step 3: call Intent form button click 

Intent i = new Intent(
		Intent.ACTION_PICK,
		android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);

startActivityForResult(i, RESULT_LOAD_IMAGE);


Step 4: add the folloing methods for checking, reading from gallery, converting into bitmap & setting image into imageView

@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
	super.onActivityResult(requestCode, resultCode, data);

	if (requestCode == RESULT_LOAD_IMAGE && resultCode == RESULT_OK && null != data) {
		Uri selectedImage = data.getData();
		String[] filePathColumn = { MediaStore.Images.Media.DATA };

		Cursor cursor = getContentResolver().query(selectedImage,
				filePathColumn, null, null, null);
		cursor.moveToFirst();

		int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
		String picturePath = cursor.getString(columnIndex);
		cursor.close();

		//ImageView imageView = (ImageView) findViewById(R.id.imgView);

		Bitmap bmp = null;
		try {
			bmp = getBitmapFromUri(selectedImage);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if(bmp == null) Toast.makeText(this, "Bitmap is null", Toast.LENGTH_SHORT).show();

		imageView.setImageBitmap(bmp);

	}
}

private Bitmap getBitmapFromUri(Uri uri) throws IOException {
	ParcelFileDescriptor parcelFileDescriptor =
			getContentResolver().openFileDescriptor(uri, "r");
	FileDescriptor fileDescriptor = parcelFileDescriptor.getFileDescriptor();
	Bitmap image = BitmapFactory.decodeFileDescriptor(fileDescriptor);
	parcelFileDescriptor.close();
	return image;
}