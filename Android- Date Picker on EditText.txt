//------------------Set Date Picker-----------------

<RelativeLayout
	android:layout_width="match_parent"
	android:layout_height="match_parent">

	<TextView
		android:id="@+id/radioNewMother"
		android:layout_width="158dp"
		android:layout_height="wrap_content"
		android:text="Dob Date: "
		android:textSize="15sp"
		android:layout_centerVertical="true"
		android:layout_alignParentLeft="true"
		android:layout_alignParentStart="true" />

	<EditText
		android:id="@+id/dob_update_date"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:ems="10"
		android:inputType="date"
		android:layout_alignParentRight="true"
		android:layout_alignParentEnd="true"
		android:hint="YYYY-MM-DD"
		android:textSize="15sp"
		android:focusable="false"
		android:visibility="visible"/>

</RelativeLayout>


<LinearLayout
	android:id="@+id/packageShogorva"
	android:layout_width="300dp"
	android:layout_height="68dp"
	android:background="#ffffff"
	android:orientation="horizontal"
	android:layout_gravity="center"
	android:visibility="gone">

	<TextView
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:textColor="#ed3e75"
		android:text="Package is  "
		android:layout_marginLeft="20dp"
		android:layout_marginRight="20dp"
		android:textSize="15sp"
		android:textStyle="bold"
		android:layout_gravity="center" />

	<ImageView
		android:layout_width="150dp"
		android:layout_height="70dp"
		android:layout_gravity="right"
		android:paddingRight="10dp"
		app:srcCompat="@drawable/shogorbha"
		android:layout_weight="0.11" />

</LinearLayout>

<LinearLayout
	android:id="@+id/packageShoishob"
	android:layout_width="340dp"
	android:layout_height="63dp"
	android:layout_gravity="center"
	android:background="#ffffff"
	android:orientation="horizontal"
	android:visibility="gone">

	<TextView
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:layout_gravity="center"
		android:layout_marginLeft="20dp"
		android:layout_marginRight="60dp"
		android:text="Package is  "
		android:textColor="#f0542c"
		android:textSize="15sp"
		android:textStyle="bold" />

	<ImageView
		android:layout_width="150dp"
		android:layout_height="60dp"
		android:layout_gravity="right"
		android:paddingRight="10dp"
		app:srcCompat="@drawable/shoishob" />

</LinearLayout>
	
------------------------------------------------------------------------
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class ActivityUpdateDob extends AppCompatActivity {

	public LinearLayout packageShogorva_for_LMP;
    public LinearLayout packageShogorva;
    public LinearLayout packageShoishob;
	
	@Override
    protected void onCreate(Bundle savedInstanceState) {
		dobEditDate     = (EditText) findViewById(R.id.dob_update_date);
        packageShogorva = (LinearLayout) findViewById(R.id.packageShogorva);
        packageShoishob = (LinearLayout) findViewById(R.id.packageShoishob);
		
		datePickerDob(dobEditDate);
	}
	
	    //-------------------DOB calender invalid date disable, and package selection on basis of date selection--------------------------
    private void datePickerDob(final EditText dobEditDate){
        dobEditDate.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

            DatePickerDialog.OnDateSetListener dpd = new DatePickerDialog.OnDateSetListener() {
                @Override
                public void onDateSet(DatePicker view, int year, int monthOfYear,
                                      int dayOfMonth) {

                int s = monthOfYear + 1;
                Calendar myCalendar = Calendar.getInstance();
                DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                myCalendar.setTime(new Date());
                myCalendar.add(Calendar.DAY_OF_YEAR,-41);
                Date validMinDateLMP = myCalendar.getTime();
                String minDateLMP = df.format(validMinDateLMP);

                Calendar mCalendar = Calendar.getInstance();
                mCalendar.setTime(new Date());
                mCalendar.add(Calendar.DAY_OF_YEAR,-294);
                Date validMaxDateDOB = mCalendar.getTime();
                String maxDateDOB = df.format(validMaxDateDOB);

                String month = null;
                String day = null;
                if (s<10){
                    month="0" + s;
                }else{
                    month ="" + s;
                }
                if (dayOfMonth<10){
                    day ="0" + dayOfMonth;
                }else{
                    day=""+dayOfMonth;
                }
                String newDate = year + "-" + month + "-" + day;

                dobEditDate.setText(newDate);

                int numbDays = dateDifference(newDate);
                if(numbDays < 0 || numbDays > (260*7+5)){
                    String msg = "";
                    Toast.makeText(ActivityUpdateDob.this, " No package is available for getContext() age !! ",  Toast.LENGTH_LONG).show();
                    msg = "No package is available for LMP date before " + maxDateDOB;
                    Toast.makeText(ActivityUpdateDob.this, msg, Toast.LENGTH_LONG).show();
//                            lmpEditDate.setText("");
                    dobEditDate.setText("");
                            packageShogorva.setVisibility(View.GONE);
                            packageShoishob.setVisibility(View.GONE);
                }
                else if (numbDays >= 0 && numbDays <= (52*7)){
                            packageShogorva.setVisibility(View.VISIBLE);
                            packageShoishob.setVisibility(View.GONE);
                }
                else if(numbDays > (52*7) && numbDays <= (104*7)){
                            packageShogorva.setVisibility(View.VISIBLE);
                            packageShoishob.setVisibility(View.GONE);
                }
                else if(numbDays > (104*7) && numbDays <= (260*7+5)){
                            packageShoishob.setVisibility(View.VISIBLE);
                            packageShogorva.setVisibility(View.GONE);
                }
                }
            };

            Calendar myCalendar = Calendar.getInstance();
            DatePickerDialog d = new DatePickerDialog(ActivityUpdateDob.this, dpd, myCalendar
                    .get(Calendar.YEAR), myCalendar.get(Calendar.MONTH),
                    myCalendar.get(Calendar.DAY_OF_MONTH));

            Date today = new Date();
            Calendar c = Calendar.getInstance();
            c.setTime(today);
            c.add(Calendar.DAY_OF_MONTH, - 1825); // Subtract 208 weeks
            long minDate = c.getTime().getTime(); // Twice!
            d.getDatePicker().setMinDate(minDate);
            c.setTime(today);
            //c.add( Calendar.WEEK_OF_MONTH, - 6 ); // Subtract 6 weeks
            long maxDate = c.getTime().getTime(); // Twice!
            d.getDatePicker().setMaxDate(maxDate);
            d.show();
            }
        });
    }
    //-------------------------------------------------------End of DOB validation---------------------------------------------------------

    //Pregnant date validation
    private int dateDifference(String PreviousDate) {
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Calendar cal = Calendar.getInstance();
        String timeStamp = df.format(cal.getTime());

        DateTimeFormatter dateStringFormat = DateTimeFormat
                .forPattern("yyyy-MM-dd");
        DateTime firstTime = dateStringFormat.parseDateTime(PreviousDate);
        DateTime secondTime = dateStringFormat.parseDateTime(timeStamp);
        int days = Days.daysBetween(new LocalDate(firstTime),
                new LocalDate(secondTime)).getDays();
        return days;
    }

}