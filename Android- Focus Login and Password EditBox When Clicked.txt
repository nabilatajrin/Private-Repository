//----------------focus login edit box when clicked-------------------

    <ImageView
        android:id="@+id/logo_aponjon"
        android:layout_width="100dp"
        android:layout_height="100dp"
        android:text="LOGO"
        android:textSize="20dp"
        android:layout_margin="20dp"
        android:src="@drawable/logo"/>

    <TextView
        android:id="@+id/aponjonRegistration"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Aponjon Registration"
        android:textSize="20dp"
        android:layout_margin="10dp"
        android:textColor="#ffffff"/>
		
		---------
//add View.OnFocusChangeListener
public class LoginActivity extends AppCompatActivity implements LoaderManager.LoaderCallbacks<String>,  View.OnTouchListener, View.OnFocusChangeListener  {
		
	private ImageView logo;
    private TextView appName;
    private LinearLayout titleLogIn;
	
	@Override
    protected void onCreate(Bundle savedInstanceState) {
	
		logo = (ImageView) findViewById(R.id.logo_aponjon);
        appName = (TextView) findViewById(R.id.aponjonRegistration);
        titleLogIn = (LinearLayout) findViewById(R.id.login);
	}
	
	
	@Override
    protected void onCreate(Bundle savedInstanceState) {
		mUserName.setOnFocusChangeListener(this);
		mUserPassword.setOnFocusChangeListener(this);
	}
	
	//automatically created when added View.OnFocusChangeListener
    //to focus username password edit text when clicked
    @Override
    public void onFocusChange(View v, boolean hasFocus) {
        if (v.getId() == R.id.username) {
            if (hasFocus) {
                logo.setVisibility(View.GONE);
            } else if(hasFocus==false) {
                hideKeyboard(v);
                logo.setVisibility(View.VISIBLE);
                appName.setVisibility(View.VISIBLE);
                titleLogIn.setVisibility(View.VISIBLE);
            }
        } else if (v.getId() == R.id.userpassword) {
            if (hasFocus) {
                logo.setVisibility(View.GONE);
            } else if(hasFocus==false) {
                hideKeyboard(v);
                logo.setVisibility(View.VISIBLE);
                appName.setVisibility(View.VISIBLE);
                titleLogIn.setVisibility(View.VISIBLE);
            }
        }
        else if ((v.getId() != R.id.username)&&(v.getId() != R.id.userpassword)) {
            logo.setVisibility(View.VISIBLE);
            appName.setVisibility(View.VISIBLE);
            titleLogIn.setVisibility(View.VISIBLE);
        }
    }

    // hide keyboard
    public void hideKeyboard(View view) {
        InputMethodManager inputMethodManager = (InputMethodManager) LoginActivity.this.getSystemService(Activity.INPUT_METHOD_SERVICE);
        inputMethodManager.hideSoftInputFromWindow(view.getWindowToken(), 0);
    }

    @Override
    public boolean onTouch(View v, MotionEvent event) {
        hideKeyboard(v);
        mUserName.clearFocus();
        mUserPassword.clearFocus();
        logo.setVisibility(View.VISIBLE);
        appName.setVisibility(View.VISIBLE);
        titleLogIn.setVisibility(View.VISIBLE);
        mMessage.setVisibility(View.GONE);
        return true;
    }
}
